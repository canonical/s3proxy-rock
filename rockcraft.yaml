name: s3proxy
base: ubuntu:22.04 # the base environment for this ROCK
version: 's3proxy-2.1.0' # just for humans. Semantic versioning is recommended
summary: A minimal implementation of the S3 interface on your own infrastructure
description: |
  S3proxy is a Java-based abstraction of the AWS S3 API, which is able to mimic
  or abstract S3 calls and transform them into a variety of backend interfaces,
  including local filesystem storage
license: Apache-2.0 # your application's SPDX license
platforms: # The platforms this ROCK should be built on and run on
  amd64:
services:
  s3proxy:
    override: replace
    startup: enabled
    command: /usr/bin/start-s3proxy.sh
    environment:
      LOG_LEVEL: info
      S3PROXY_AUTHORIZATION: aws-v2-or-v4
      S3PROXY_ENDPOINT: http://0.0.0.0:80
      S3PROXY_IDENTITY: local-identity
      S3PROXY_CREDENTIAL: local-credential
      S3PROXY_VIRTUALHOST: ""
      S3PROXY_CORS_ALLOW_ALL: "false"
      S3PROXY_CORS_ALLOW_ORIGINS: ""
      S3PROXY_CORS_ALLOW_METHODS: ""
      S3PROXY_CORS_ALLOW_HEADERS: ""
      S3PROXY_IGNORE_UNKNOWN_HEADERS: "false"
      S3PROXY_ENCRYPTED_BLOBSTORE: ""
      S3PROXY_ENCRYPTED_BLOBSTORE_PASSWORD: ""
      S3PROXY_ENCRYPTED_BLOBSTORE_SALT: ""
      JCLOUDS_PROVIDER: filesystem
      JCLOUDS_ENDPOINT: ""
      JCLOUDS_REGION: ""
      JCLOUDS_REGIONS: us-east-1
      JCLOUDS_IDENTITY: remote-identity
      JCLOUDS_CREDENTIAL: remote-credential
      JCLOUDS_KEYSTONE_VERSION: ""
      JCLOUDS_KEYSTONE_SCOPE: ""
      JCLOUDS_KEYSTONE_PROJECT_DOMAIN_NAME: ""
      JCLOUDS_FILESYSTEM_BASEDIR: /data
parts:
  wrapper-script:
    plugin: dump
    source: .
    organize:
      start-s3proxy.sh: usr/bin/start-s3proxy.sh
    stage:
      - usr/bin/start-s3proxy.sh
  jre:
    plugin: nil
    overlay-packages:
      - default-jre-headless
  s3proxy:
    plugin: nil
    source-type: git
    source: https://github.com/gaul/s3proxy
    source-tag: s3proxy-2.1.0
    build-environment:
      - VERSION: "2.0.0"
      - JAVA_HOME: "/usr/lib/jvm/default-java"
      - SUDO_UID: "0"
      - SUDO_GID: "0"
      - SUDO_USER: "root"
    build-packages:
      - default-jdk
      - maven
    override-build: |
      mvn versions:set -DnewVersion=${VERSION}
      mvn package -DskipTests
      install -D -m755 target/s3proxy ${CRAFT_PART_INSTALL}/opt/s3proxy/bin/s3proxy
    organize:
      opt/s3proxy/bin/s3proxy: usr/bin/s3proxy
    stage: [-opt/s3proxy]
    build-snaps:
      - go//stable
