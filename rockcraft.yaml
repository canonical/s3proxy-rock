name: s3proxy
base: ubuntu:22.04 # the base environment for this ROCK
version: '2.0.0' # just for humans. Semantic versioning is recommended
summary: A minimal implementation of the S3 interface on your own infrastructure
description: |
    S3proxy is a Java-based abstraction of the AWS S3 API, which is able to mimic
    or abstract S3 calls and transform them into a variety of backend interfaces,
    including local filesystem storage
license: Apache-2.0 # your application's SPDX license
platforms: # The platforms this ROCK should be built on and run on
    amd64:

env:
  - LOG_LEVEL: "info"
  - S3PROXY_AUTHORIZATION: aws-v2-or-v4
  - S3PROXY_ENDPOINT: http://0.0.0.0:80
  - S3PROXY_IDENTITY: local-identity
  - S3PROXY_CREDENTIAL: local-credential
  - S3PROXY_VIRTUALHOST: ""
  - S3PROXY_CORS_ALLOW_ALL: false
  - S3PROXY_CORS_ALLOW_ORIGINS: ""
  - S3PROXY_CORS_ALLOW_METHODS: ""
  - S3PROXY_CORS_ALLOW_HEADERS: ""
  - S3PROXY_IGNORE_UNKNOWN_HEADERS: false
  - S3PROXY_ENCRYPTED_BLOBSTORE: ""
  - S3PROXY_ENCRYPTED_BLOBSTORE_PASSWORD: ""
  - S3PROXY_ENCRYPTED_BLOBSTORE_SALT: ""
  - JCLOUDS_PROVIDER: filesystem
  - JCLOUDS_ENDPOINT: ""
  - JCLOUDS_REGION: ""
  - JCLOUDS_REGIONS: us-east-1
  - JCLOUDS_IDENTITY: remote-identity
  - JCLOUDS_CREDENTIAL: remote-credential
  - JCLOUDS_KEYSTONE_VERSION: ""
  - JCLOUDS_KEYSTONE_SCOPE: ""
  - JCLOUDS_KEYSTONE_PROJECT_DOMAIN_NAME: ""
  - JCLOUDS_FILESYSTEM_BASEDIR: /data

cmd:
  - java
    - -DLOG_LEVEL="${LOG_LEVEL}"
    - -Ds3proxy.endpoint="${S3PROXY_ENDPOINT}"
    - -Ds3proxy.virtual-host="${S3PROXY_VIRTUALHOST}"
    - -Ds3proxy.authorization="${S3PROXY_AUTHORIZATION}"
    - -Ds3proxy.identity="${S3PROXY_IDENTITY}"
    - -Ds3proxy.credential="${S3PROXY_CREDENTIAL}"
    - -Ds3proxy.cors-allow-all="${S3PROXY_CORS_ALLOW_ALL}"
    - -Ds3proxy.cors-allow-origins="${S3PROXY_CORS_ALLOW_ORIGINS}"
    - -Ds3proxy.cors-allow-methods="${S3PROXY_CORS_ALLOW_METHODS}"
    - -Ds3proxy.cors-allow-headers="${S3PROXY_CORS_ALLOW_HEADERS}"
    - -Ds3proxy.ignore-unknown-headers="${S3PROXY_IGNORE_UNKNOWN_HEADERS}"
    - -Ds3proxy.encrypted-blobstore="${S3PROXY_ENCRYPTED_BLOBSTORE}"
    - -Ds3proxy.encrypted-blobstore-password="${S3PROXY_ENCRYPTED_BLOBSTORE_PASSWORD}"
    - -Ds3proxy.encrypted-blobstore-salt="${S3PROXY_ENCRYPTED_BLOBSTORE_SALT}"
    - -Ds3proxy.v4-max-non-chunked-request-size="${S3PROXY_V4_MAX_NON_CHUNKED_REQ_SIZE}"
    - -Djclouds.provider="${JCLOUDS_PROVIDER}"
    - -Djclouds.identity="${JCLOUDS_IDENTITY}"
    - -Djclouds.credential="${JCLOUDS_CREDENTIAL}"
    - -Djclouds.endpoint="${JCLOUDS_ENDPOINT}"
    - -Djclouds.region="${JCLOUDS_REGION}"
    - -Djclouds.regions="${JCLOUDS_REGIONS}"
    - -Djclouds.keystone.version="${JCLOUDS_KEYSTONE_VERSION}"
    - -Djclouds.keystone.scope="${JCLOUDS_KEYSTONE_SCOPE}"
    - -Djclouds.keystone.project-domain-name="${JCLOUDS_KEYSTONE_PROJECT_DOMAIN_NAME}"
    - -Djclouds.filesystem.basedir="${JCLOUDS_FILESYSTEM_BASEDIR}"
    - -Djclouds.azureblob.tenantId="${JCLOUDS_AZUREBLOB_TENANTID}"
    - -Djclouds.azureblob.auth="${JCLOUDS_AZUREBLOB_AUTH}"
    - -Djclouds.azureblob.account="${JCLOUDS_AZUREBLOB_ACCOUNT}"
    - -jar
    - /bin/s3proxy
    - --properties
    - /dev/null

parts:
    s3proxy:
        plugin: nil
        source-type: git
        source: https://github.com/gaul/s3proxy
        source-tag: s3proxy-2.0.0
        build-environment:
          - VERSION: "2.0.0"
          - JAVA_HOME: "/usr/lib/jvm/default-java"
          - SUDO_UID: "0"
          - SUDO_GID: "0"
          - SUDO_USER: "root"
        build-packages:
          - default-jdk
          - maven
        override-build: |
          mvn versions:set -DnewVersion=${VERSION}
          mvn package -DskipTests
          mkdir -p /root/parts/s3proxy/install/bin
          mv target/s3proxy /root/parts/s3proxy/install/bin/s3proxy
